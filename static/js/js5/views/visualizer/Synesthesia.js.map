{"version":3,"sources":["../../../js6/views/visualizer/Synesthesia.js"],"names":[],"mappings":";;;;;;;;IAAM,WAAW,cAAS,UAAU;AAoCrB,aApCT,WAAW;8BAAX,WAAW;KAsCZ;;cAtCC,WAAW,EAAS,UAAU;;yBAA9B,WAAW;AACN,wBAAgB;mBAAA,0BAAC,QAAQ,EAAE,YAAY,EAAE,QAAQ,EAAC;AACrD,oBAAI,MAAM,GAAG,EAAE,CAAC;AAChB,oBAAI,sBAAsB,GAAG,EAAE,CAAC;AAChC,4BAAY,CAAC,OAAO,CAAC,UAAA,UAAU,EAAI;AAC/B,wBAAI,cAAc,GAAG,QAAQ,GAAG,UAAU,CAAC;AAC3C,wBAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAC;AACpC,8BAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAC5B,8CAAsB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;qBAC3C;iBACJ,CAAC,CAAC;AACH,uBAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACpB,oBAAI,GAAG,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;AACvB,uBAAO,CAAE,MAAM,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;AAC9B,uBAAO,GAAG,CAAC,OAAO,EAAE,CAAC;aACxB;;;;AAEM,oCAA4B;mBAAA,sCAAC,aAAa,EAAC;;;AAC9C,oBAAI,GAAG,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;AACvB,oBAAI,cAAc,GAAG,0BAA0B,CAAC;AAChD,oBAAI,cAAc,GAAG,0BAA0B,CAAA;AAC/C,oBAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,aAAa,CAAC,CAAC,IAAI,CAAC,YAAM;AAC5D,iCAAa,CAAC,OAAO,CAAC,UAAA,UAAU,EAAI;AAChC,4BAAI,uBAAuB,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,0BAA0B,EAAE,CAAC;AAC9E,8BAAM,CAAC,UAAU,CAAC,CAAC,yBAAyB,EAAE,CAAC,IAAI,CAAC,UAAA,aAAa,EAAI;AACjE,gCAAI,YAAY,GAAG,uBAAuB,GAAG,CAAC,uBAAuB,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,aAAa,CAAC;AAC7G,wCAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AAC9B,kCAAK,gBAAgB,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC,IAAI,CAAC,YAAM;AAC3D,mCAAG,CAAC,OAAO,EAAE,CAAC;6BACjB,CAAC,CAAC;yBACN,CAAC,CAAC;qBACN,CAAC,CAAC;iBACN,CAAC,CAAC;AACH,uBAAO,GAAG,CAAC,OAAO,EAAE,CAAC;aACxB;;;;;;WAlCC,WAAW;GAAS,UAAU","file":"static/js/js6/views/visualizer/Synesthesia.js","sourcesContent":["class Synesthesia extends BaseObject{\n    static loadDependencies(basePath, dependencies, callback){\n        var toLoad = [];\n        var normalizedDependencies = [];\n        dependencies.forEach(dependency => {\n            var dependencyPath = basePath + dependency;\n            if (!_(toLoad).contains(dependencyPath)){\n                toLoad.push(dependencyPath);\n                normalizedDependencies.push(dependency);\n            }\n        });\n        console.log(toLoad);\n        var dfd = $.Deferred();\n        require( toLoad, dfd.resolve);\n        return dfd.promise();\n    }\n\n    static loadLayersSynesthesiaClasses(layersClasses){\n        var dfd = $.Deferred();\n        var layersBasePath = \"views/visualizer/layers/\";\n        var actorsBasePath = \"views/visualizer/actors/\"\n        this.loadDependencies(layersBasePath, layersClasses).done(() => {\n            layersClasses.forEach(layerClass => {\n                var layerSpecificActorClass = window[layerClass].getLayerSpecificActorClass();\n                window[layerClass].getAvailableActorsClasses().done(actorsClasses => {\n                    var dependencies = layerSpecificActorClass ? [layerSpecificActorClass].concat(actorsClasses) : actorsClasses;\n                    dependencies.unshift(\"Actor\");\n                    this.loadDependencies(actorsBasePath, dependencies).done(() => {\n                        dfd.resolve();\n                    });                    \n                });\n            });\n        });\n        return dfd.promise();\n    }\n\n    constructor(){\n        //This should include scene awareness maybe?\n    }\n}"]}