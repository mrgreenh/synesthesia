{"version":3,"sources":["../../../js6/views/visualizer/Director.js"],"names":[],"mappings":";;;;;;;;IAAM,QAAQ,cAAS,WAAW;AACnB,aADT,QAAQ;;;8BAAR,QAAQ;;AAEN,YAAI,CAAC,GAAG,GAAG,CAAC,CAAC,kBAAkB,CAAC,CAAC;AACjC,YAAI,CAAC,MAAM,GAAG,EAAE,CAAC;AACjB,YAAI,CAAC,OAAO,CAAC;AACb,YAAI,CAAC,UAAU,CAAC;;;AAGhB,SAAC,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,SAAS,EAAE,UAAU,EAAK;AACvF,kBAAK,OAAO,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AAC7B,kBAAK,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAC/B,kBAAK,WAAW,EAAE,CAAC;SACtB,CAAC,CAAC;KACN;;cAbC,QAAQ,EAAS,WAAW;;yBAA5B,QAAQ;AAeV,mBAAW;mBAAA,uBAAE;AACT,oBAAI,aAAa,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,UAAA,IAAI,EAAI;AAC1D,2BAAO,IAAI,CAAC,IAAI,CAAC;iBACpB,CAAC,CAAC;AACH,6BAAa,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AAC/B,2BAAW,CAAC,4BAA4B,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;aACnG;;;;AAED,yBAAiB;mBAAA,6BAAE;;;AACf,oBAAG,CAAC,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;AAC9D,oBAAI,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,UAAA,IAAI,EAAI;AACvC,0BAAK,oBAAoB,CAAC,IAAI,CAAC,MAAK,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;iBAC/D,CAAC,CAAC;AACH,iBAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC,CAAC;aACrF;;;;AAED,wBAAgB;mBAAA,0BAAC,SAAS,EAAC;AACvB,oBAAI,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC;AAC/B,oBAAG;AACC,wBAAI,KAAK,GAAG,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;;AAE3D,wBAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACxB,wBAAI,gBAAgB,GAAG,KAAK,CAAC,kBAAkB,EAAE,CAAC;AAClD,wBAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;AACjD,2BAAO,gBAAgB,CAAC;iBAC3B,CAAA,OAAM,EAAE,EAAC;AACN,2BAAO,CAAC,IAAI,CAAC,6BAA6B,GAAC,SAAS,CAAC,CAAC;AACtD,2BAAO,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;AACtB,2BAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;iBACnB;aACJ;;;;AAED,0BAAkB;mBAAA,8BAAE;AAChB,uBAAO,CAAC,CAAC,IAAI,CAAC;AACV,uBAAG,EAAE,oBAAoB;iBAC5B,CAAC,CAAC;aACN;;;;AAED,wBAAgB;mBAAA,4BAAE;AACd,uBAAO,CAAC,CAAC,IAAI,CAAC;AACV,uBAAG,EAAE,mBAAmB;iBAC3B,CAAC,CAAC;aACN;;;;AAED,qBAAa;mBAAA,yBAAG;;;AACZ,oBAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;AACzB,yBAAK,CAAC,MAAM,CAAC,MAAK,GAAG,CAAC,CAAC;iBAC1B,CAAC,CAAC;aACN;;;;;;WA/DC,QAAQ;GAAS,WAAW","file":"static/js/js6/views/visualizer/Director.js","sourcesContent":["class Director extends Synesthesia{\n    constructor(){\n        this.$el = $(\"#stage-container\");\n        this.layers = [];\n        this._config;\n        this._trackData;\n        //Load the configuration that describes classes and track data\n        //Then start doing your thing\n        $.when(this._loadNextTrackData(), this._loadStageConfig()).then((trackData, configData) => {\n            this._config = configData[0];\n            this._trackData = trackData[0];\n            this._startTrack();\n        });\n    }\n\n    _startTrack(){\n        var layersClasses = _(this._trackData.layersData).map(elem => {\n            return elem.type;\n        });\n        layersClasses.unshift(\"Layer\");\n        Synesthesia.loadLayersSynesthesiaClasses(layersClasses).done(this._initializeLayers.bind(this));\n    }\n\n    _initializeLayers(){\n        if(!this._layersInitsPromises) this._layersInitsPromises = [];\n        this._trackData.layersData.forEach(elem => {\n            this._layersInitsPromises.push(this._initializeLayer(elem));\n        });\n        $.when.apply($, this._layersInitsPromises).done(_.bind(this._renderLayers, this));\n    }\n\n    _initializeLayer(layerData){\n        var className = layerData.type;\n        try{\n            var layer = new window[className](layerData, this._config);\n            //Layers instances are kept in an array, as their order affects overlapping\n            this.layers.push(layer);\n            var layerInitPromise = layer.isItInitializedYet();\n            this._layersInitsPromises.push(layerInitPromise);\n            return layerInitPromise;\n        }catch(ex){\n            console.warn(\"Could not initialize layer \"+className);\n            console.log(ex.stack);\n            console.log(ex);\n        }\n    }\n\n    _loadNextTrackData(){\n        return $.ajax({\n            url: \"/get_current_track\"\n        });\n    }\n\n    _loadStageConfig(){\n        return $.ajax({\n            url: \"/get_stage_config\"\n        });\n    }\n\n    _renderLayers() {\n        this.layers.forEach(layer => {\n            layer.render(this.$el);\n        });\n    }\n}"]}